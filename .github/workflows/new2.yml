name: DITA-OT-OCRD
'on':
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  build-dita:
    name: Build DITA
    runs-on: ubuntu-latest
    steps:
      
      - name: Git checkout
        uses: actions/checkout@v2
      
      - name: clone ocrd-wiki
        run: git clone https://github.com/OCR-D/ocrd-website.wiki.git

      - name: download DITA dtd
        run: cd de/xsl && wget https://github.com/oxygenxml/oxygen-dita-translation-package-builder-addon/archive/refs/heads/master.zip && unzip master.zip  
      
      - name: Set up JDK 1.8
        uses: joschi/setup-jdk@v2
        with:
          java-version: '11'
      
      - name: Download and install saxon 
        run: wget https://www.saxonica.com/download/SaxonEE11-1J.zip && unzip SaxonEE11-1J.zip
             
      - name: add wiki faq
        run: sudo java -jar saxon-ee-11.1.jar -xsl:de/xsl/wiki.xsl -catalog:de/xsl/oxygen-dita-translation-package-builder-addon-master/config/catalogs/catalog.xml -s:de/ocrd_ocrd.ditamap -o:de/ocrd_ocrd_wiki.ditamap

      - name: look for
        run: cd de && ls   
      
    #  - name: Build Bootstrap-german ‚öôÔ∏è
    #    uses: dita-ot/dita-ot-action@master
    #    with:
    #      
    #      install: |
    #        apt-get update -q
    #        export DEBIAN_FRONTEND=noninteractive
    #        apt-get install -qy --no-install-recommends nodejs
    #        nodejs -v
    #      plugins: |
    #         https://github.com/jason-fox/fox.jason.extend.css/archive/master.zip
    #         https://github.com/infotexture/dita-bootstrap/archive/develop.zip
    #         https://github.com/jason-fox/fox.jason.prismjs/archive/master.zip
    #      build: |
    #         dita --project=.github/dita-ot/html.xml
            
          
          
    #  - name: Build Bootstrap-english ‚öôÔ∏è
    #    uses: dita-ot/dita-ot-action@master
    #    with:
    #      install: |
    #        apt-get update -q
    #        export DEBIAN_FRONTEND=noninteractive
    #        apt-get install -qy --no-install-recommends nodejs
    #        nodejs -v
    #      plugins: |
    #        https://github.com/jason-fox/fox.jason.extend.css/archive/master.zip
    #        https://github.com/infotexture/dita-bootstrap/archive/develop.zip
    #        https://github.com/jason-fox/fox.jason.prismjs/archive/master.zip
    #      build: |
    #       dita --project=.github/dita-ot/html_en.xml
          
            
    #  - name: output dir
    #    run: cd out && sudo mkdir rules
    #  - name: transform rules
    #    run: sudo java -jar saxon-he-10.5.jar -xsl:de/xsl/rules.xsl -s:de/trans/trFremdsprache.dita -o:out/rules/ruleset_character.json && sudo java -jar saxon-he-10.5.jar -xsl:de/xsl/rules.xsl -s:de/trans/trLigaturen2.dita -o:out/rules/ruleset_ligature.json

      

    #  - name: Deploy HTML üöÄ
    #    uses: JamesIves/github-pages-deploy-action@3.7.1
    #    with:
    #      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #      BRANCH: gh-pages # The branch the action should deploy to.
    #      FOLDER: out # The folder the action should deploy.
      
          

      
     # - name: Build PDF
     #   uses: dita-ot/dita-ot-action@master
     #   with:
     #     install: |
     #       # Run some arbitrary installation commands
     #       apt-get update -q
     #       apt-get install -qy --no-install-recommends nodejs
     #       nodejs -v

            # Install plugins
     #       dita install fox.jason.extend.css
     #       dita install org.doctales.xmltask
     #       dita install fox.jason.prismjs
     #     build: |
     #       # Use the dita command line
     #       dita --project=.github/dita-ot/pdf.xml -o out -f pdf
      
      

    #  - name: Upload DITA Output to a ZIP file
    #    uses: actions/upload-artifact@v2
    #    with:
    #      name: OCRD-GT-Guidelines
    #      path: 'out'

    #  - name: Deploy DITA Output to GitHub Pages
    #    uses: JamesIves/github-pages-deploy-action@3.7.1
    #    with:
    #      GITHUB_TOKEN: $
    #      BRANCH: gh-pages # The branch the action should deploy to.
    #      FOLDER: out # The folder the action should deploy.
